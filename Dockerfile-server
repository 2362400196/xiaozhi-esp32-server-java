# 使用Alpine作为基础镜像，大大减小体积
FROM alpine:3.16 AS builder

# 添加构建参数，默认使用标准模型
ARG VOSK_MODEL_SIZE=standard

# 安装必要的构建工具，使用Alpine的包管理器
RUN apk add --no-cache openjdk8 maven wget unzip

WORKDIR /build

COPY ./ .

RUN rm -rf ./web

RUN mvn clean package -DskipTests

# 根据选择的模型大小下载不同的Vosk模型
RUN if [ "$VOSK_MODEL_SIZE" = "small" ]; then \
        echo "Downloading small Vosk model..." && \
        wget https://alphacephei.com/vosk/models/vosk-model-small-cn-0.22.zip && \
        unzip vosk-model-small-cn-0.22.zip && \
        mkdir -p models && \
        mv vosk-model-small-cn-0.22 models/vosk-model && \
        rm vosk-model-small-cn-0.22.zip; \
    else \
        echo "Downloading standard Vosk model..." && \
        wget https://alphacephei.com/vosk/models/vosk-model-cn-0.22.zip && \
        unzip vosk-model-cn-0.22.zip && \
        mkdir -p models && \
        mv vosk-model-cn-0.22 models/vosk-model && \
        rm vosk-model-cn-0.22.zip; \
    fi

# 使用更小的运行时镜像
FROM eclipse-temurin:8-jre-alpine

# 安装必要的运行时依赖
RUN apk add --no-cache ffmpeg

WORKDIR /app

COPY --from=builder /build/target/xiaozhi.server-1.0.jar /app/
# 复制模型文件夹
COPY --from=builder /build/models /app/models

# 使用JVM优化参数
CMD ["java", "-Xms512m", "-Xmx1024m", "-jar", "xiaozhi.server-1.0.jar"]